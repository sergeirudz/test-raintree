{
  "id": "mui-add-on",
  "name": "MUI",
  "version": "0.0.1",
  "description": "Material UI components",
  "author": "Jane Smith <jane.smith@example.com>",
  "license": "MIT",
  "link": "https://github.com/jane-smith/mui-add-on-add-on",
  "shadcnComponents": [],
  "framework": "react-cra",
  "modes": ["file-router"],
  "routes": [
    {
      "url": "/demo/mui",
      "name": "mui",
      "jsName": "Mui",
      "path": "./src/routes/demo.mui.tsx"
    }
  ],
  "integrations": [
    {
      "type": "provider",
      "jsName": "MuiProvider",
      "path": "./src/components/mui-provider.tsx"
    }
  ],
  "warning": "",
  "phase": "add-on",
  "type": "add-on",
  "packageAdditions": {
    "dependencies": {
      "@emotion/styled": "^11.14.0",
      "@fontsource/roboto": "^5.2.5",
      "@mui/icons-material": "^7.0.1",
      "@mui/material": "^7.0.1",
      "@mui/styled-engine-sc": "^7.0.1",
      "styled-components": "^6.1.16"
    }
  },
  "dependsOn": [],
  "files": {
    "./src/components/mui-provider.tsx": "import { ThemeProvider, createTheme } from '@mui/material/styles'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#000000',\n    },\n  },\n})\n\nexport default function MuiProvider({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\n",
    "./src/routes/demo.mui.tsx.ejs": "import { <% if (fileRouter) { %>createFileRoute<% } else { %>createRoute<% } %> } from '@tanstack/react-router'\n\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\n\n<% if (codeRouter) { %>\nimport type { RootRoute } from '@tanstack/react-router'\n<% } else { %>\nexport const Route = createFileRoute('/demo/mui')({\n  component: MUIDemo,\n})\n<% } %>\n\nfunction MUIDemo() {\n  return (\n    <Box sx={{ px: 2, py: 4 }}>\n      <Button variant=\"contained\">Hello world</Button>\n    </Box>\n  )\n}\n\n<% if (codeRouter) { %>\nexport default (parentRoute: RootRoute) => createRoute({\n  path: '/demo/mui',\n  \n  component: MUIDemo,\n\n  getParentRoute: () => parentRoute,\n})\n<% } %>\n"
  },
  "deletedFiles": []
}
